{
  "id": "b0ea7ef0-5ced-44b8-af42-07211304c94b",
  "prevId": "20ab28e0-d954-4ea1-a1c2-3ee90e7df6d9",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.chat_messages": {
      "name": "chat_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "chat_room_id": {
          "name": "chat_room_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "is_edited": {
          "name": "is_edited",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "parent_message_id": {
          "name": "parent_message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_messages_chat_room_id_chat_rooms_id_fk": {
          "name": "chat_messages_chat_room_id_chat_rooms_id_fk",
          "tableFrom": "chat_messages",
          "tableTo": "chat_rooms",
          "columnsFrom": [
            "chat_room_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_messages_user_id_profiles_id_fk": {
          "name": "chat_messages_user_id_profiles_id_fk",
          "tableFrom": "chat_messages",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_messages_parent_message_id_chat_messages_id_fk": {
          "name": "chat_messages_parent_message_id_chat_messages_id_fk",
          "tableFrom": "chat_messages",
          "tableTo": "chat_messages",
          "columnsFrom": [
            "parent_message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_rooms": {
      "name": "chat_rooms",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_rooms_created_by_profiles_id_fk": {
          "name": "chat_rooms_created_by_profiles_id_fk",
          "tableFrom": "chat_rooms",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.message_reactions": {
      "name": "message_reactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reaction": {
          "name": "reaction",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "message_reaction_unique": {
          "name": "message_reaction_unique",
          "columns": [
            {
              "expression": "message_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "reaction",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "message_reactions_message_id_chat_messages_id_fk": {
          "name": "message_reactions_message_id_chat_messages_id_fk",
          "tableFrom": "message_reactions",
          "tableTo": "chat_messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "message_reactions_user_id_profiles_id_fk": {
          "name": "message_reactions_user_id_profiles_id_fk",
          "tableFrom": "message_reactions",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.pinned_messages": {
      "name": "pinned_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "chat_room_id": {
          "name": "chat_room_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "pinned_by": {
          "name": "pinned_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "pinned_at": {
          "name": "pinned_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "pinned_message_unique": {
          "name": "pinned_message_unique",
          "columns": [
            {
              "expression": "message_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "chat_room_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "pinned_messages_message_id_chat_messages_id_fk": {
          "name": "pinned_messages_message_id_chat_messages_id_fk",
          "tableFrom": "pinned_messages",
          "tableTo": "chat_messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pinned_messages_chat_room_id_chat_rooms_id_fk": {
          "name": "pinned_messages_chat_room_id_chat_rooms_id_fk",
          "tableFrom": "pinned_messages",
          "tableTo": "chat_rooms",
          "columnsFrom": [
            "chat_room_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "pinned_messages_pinned_by_profiles_id_fk": {
          "name": "pinned_messages_pinned_by_profiles_id_fk",
          "tableFrom": "pinned_messages",
          "tableTo": "profiles",
          "columnsFrom": [
            "pinned_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.feedback_templates": {
      "name": "feedback_templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "feedback_templates_category_idx": {
          "name": "feedback_templates_category_idx",
          "columns": [
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "feedback_templates_created_by_idx": {
          "name": "feedback_templates_created_by_idx",
          "columns": [
            {
              "expression": "created_by_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "feedback_templates_created_by_id_profiles_id_fk": {
          "name": "feedback_templates_created_by_id_profiles_id_fk",
          "tableFrom": "feedback_templates",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_evaluations": {
      "name": "final_evaluations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "total_points": {
          "name": "total_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "overall_feedback": {
          "name": "overall_feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "final_evaluations_group_id_final_groups_id_fk": {
          "name": "final_evaluations_group_id_final_groups_id_fk",
          "tableFrom": "final_evaluations",
          "tableTo": "final_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_evaluations_user_id_users_id_fk": {
          "name": "final_evaluations_user_id_users_id_fk",
          "tableFrom": "final_evaluations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "final_evaluations_group_id_user_id_key": {
          "name": "final_evaluations_group_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Users can view their own final evaluations": {
          "name": "Users can view their own final evaluations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        },
        "Admins can manage final evaluations": {
          "name": "Admins can manage final evaluations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n        FROM user_roles\n        WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))",
          "withCheck": "(EXISTS ( SELECT 1\n        FROM user_roles\n        WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_group_members": {
      "name": "final_group_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "final_group_members_group_id_final_groups_id_fk": {
          "name": "final_group_members_group_id_final_groups_id_fk",
          "tableFrom": "final_group_members",
          "tableTo": "final_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_group_members_user_id_users_id_fk": {
          "name": "final_group_members_user_id_users_id_fk",
          "tableFrom": "final_group_members",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "final_group_members_group_id_user_id_key": {
          "name": "final_group_members_group_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Authenticated users can view final group members": {
          "name": "Authenticated users can view final group members",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Users can join final groups (insert)": {
          "name": "Users can join final groups (insert)",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = auth.uid())"
        },
        "Users can leave final groups (delete)": {
          "name": "Users can leave final groups (delete)",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_groups": {
      "name": "final_groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "selected_project_id": {
          "name": "selected_project_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "project_idea": {
          "name": "project_idea",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_url": {
          "name": "repository_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_owner": {
          "name": "repository_owner",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_name": {
          "name": "repository_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_sync": {
          "name": "last_sync",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "final_groups_selected_project_id_final_projects_id_fk": {
          "name": "final_groups_selected_project_id_final_projects_id_fk",
          "tableFrom": "final_groups",
          "tableTo": "final_projects",
          "columnsFrom": [
            "selected_project_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated users can view final groups": {
          "name": "Authenticated users can view final groups",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Authenticated users can create final groups": {
          "name": "Authenticated users can create final groups",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Group members can update their group": {
          "name": "Group members can update their group",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM final_group_members\n        WHERE final_group_members.group_id = \"final_groups\".\"id\"\n        AND final_group_members.user_id = auth.uid()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM final_group_members\n        WHERE final_group_members.group_id = \"final_groups\".\"id\"\n        AND final_group_members.user_id = auth.uid()\n      )"
        },
        "Group owners can delete their group": {
          "name": "Group owners can delete their group",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM final_group_members\n        WHERE final_group_members.group_id = \"final_groups\".\"id\"\n        AND final_group_members.user_id = auth.uid()\n        AND final_group_members.role = 'owner'::text\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_projects": {
      "name": "final_projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "learning_objectives": {
          "name": "learning_objectives",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "expected_deliverables": {
          "name": "expected_deliverables",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "resource_links": {
          "name": "resource_links",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "project_tags": {
          "name": "project_tags",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "created_by_admin_id": {
          "name": "created_by_admin_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "final_projects_created_by_admin_id_users_id_fk": {
          "name": "final_projects_created_by_admin_id_users_id_fk",
          "tableFrom": "final_projects",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by_admin_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Authenticated users can view final projects": {
          "name": "Authenticated users can view final projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Admins can create, update, delete final projects": {
          "name": "Admins can create, update, delete final projects",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n        FROM user_roles\n        WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))",
          "withCheck": "(EXISTS ( SELECT 1\n        FROM user_roles\n        WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_task_assignees": {
      "name": "final_task_assignees",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "task_id": {
          "name": "task_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assigned_by_id": {
          "name": "assigned_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "assigned_at": {
          "name": "assigned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "final_task_assignees_task_id_idx": {
          "name": "final_task_assignees_task_id_idx",
          "columns": [
            {
              "expression": "task_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_task_assignees_user_id_idx": {
          "name": "final_task_assignees_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "final_task_assignees_task_id_final_tasks_id_fk": {
          "name": "final_task_assignees_task_id_final_tasks_id_fk",
          "tableFrom": "final_task_assignees",
          "tableTo": "final_tasks",
          "columnsFrom": [
            "task_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_task_assignees_user_id_profiles_id_fk": {
          "name": "final_task_assignees_user_id_profiles_id_fk",
          "tableFrom": "final_task_assignees",
          "tableTo": "profiles",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_task_assignees_assigned_by_id_profiles_id_fk": {
          "name": "final_task_assignees_assigned_by_id_profiles_id_fk",
          "tableFrom": "final_task_assignees",
          "tableTo": "profiles",
          "columnsFrom": [
            "assigned_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "final_task_assignees_task_user_unique": {
          "name": "final_task_assignees_task_user_unique",
          "nullsNotDistinct": false,
          "columns": [
            "task_id",
            "user_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_task_grades": {
      "name": "final_task_grades",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "task_id": {
          "name": "task_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "grader_id": {
          "name": "grader_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "points": {
          "name": "points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "max_points": {
          "name": "max_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "graded_at": {
          "name": "graded_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "final_task_grades_task_id_idx": {
          "name": "final_task_grades_task_id_idx",
          "columns": [
            {
              "expression": "task_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_task_grades_student_id_idx": {
          "name": "final_task_grades_student_id_idx",
          "columns": [
            {
              "expression": "student_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_task_grades_grader_id_idx": {
          "name": "final_task_grades_grader_id_idx",
          "columns": [
            {
              "expression": "grader_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "final_task_grades_task_id_final_tasks_id_fk": {
          "name": "final_task_grades_task_id_final_tasks_id_fk",
          "tableFrom": "final_task_grades",
          "tableTo": "final_tasks",
          "columnsFrom": [
            "task_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_task_grades_student_id_profiles_id_fk": {
          "name": "final_task_grades_student_id_profiles_id_fk",
          "tableFrom": "final_task_grades",
          "tableTo": "profiles",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_task_grades_grader_id_profiles_id_fk": {
          "name": "final_task_grades_grader_id_profiles_id_fk",
          "tableFrom": "final_task_grades",
          "tableTo": "profiles",
          "columnsFrom": [
            "grader_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "final_task_grades_task_student_unique": {
          "name": "final_task_grades_task_student_unique",
          "nullsNotDistinct": false,
          "columns": [
            "task_id",
            "student_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.final_tasks": {
      "name": "final_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "commit_link": {
          "name": "commit_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "merge_request_link": {
          "name": "merge_request_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "priority": {
          "name": "priority",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'medium'"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'todo'"
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "estimated_hours": {
          "name": "estimated_hours",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "final_tasks_group_id_idx": {
          "name": "final_tasks_group_id_idx",
          "columns": [
            {
              "expression": "group_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_tasks_status_idx": {
          "name": "final_tasks_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_tasks_priority_idx": {
          "name": "final_tasks_priority_idx",
          "columns": [
            {
              "expression": "priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "final_tasks_due_date_idx": {
          "name": "final_tasks_due_date_idx",
          "columns": [
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "final_tasks_group_id_final_groups_id_fk": {
          "name": "final_tasks_group_id_final_groups_id_fk",
          "tableFrom": "final_tasks",
          "tableTo": "final_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "final_tasks_created_by_id_profiles_id_fk": {
          "name": "final_tasks_created_by_id_profiles_id_fk",
          "tableFrom": "final_tasks",
          "tableTo": "profiles",
          "columnsFrom": [
            "created_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_contributions": {
      "name": "midterm_contributions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "github_username": {
          "name": "github_username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "commits": {
          "name": "commits",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "pull_requests": {
          "name": "pull_requests",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "code_reviews": {
          "name": "code_reviews",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "additions": {
          "name": "additions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "deletions": {
          "name": "deletions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "branches_created": {
          "name": "branches_created",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "last_commit_date": {
          "name": "last_commit_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "contributionData": {
          "name": "contributionData",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "midterm_contributions_group_id_fkey": {
          "name": "midterm_contributions_group_id_fkey",
          "tableFrom": "midterm_contributions",
          "tableTo": "midterm_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "midterm_contributions_user_id_fkey": {
          "name": "midterm_contributions_user_id_fkey",
          "tableFrom": "midterm_contributions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "midterm_contributions_group_id_user_id_key": {
          "name": "midterm_contributions_group_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Everyone can view contributions": {
          "name": "Everyone can view contributions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_evaluations": {
      "name": "midterm_evaluations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "evaluator_id": {
          "name": "evaluator_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "spec_score": {
          "name": "spec_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "test_score": {
          "name": "test_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "implementation_score": {
          "name": "implementation_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "documentation_score": {
          "name": "documentation_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "git_workflow_score": {
          "name": "git_workflow_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_score": {
          "name": "total_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "midterm_evaluations_group_id_fkey": {
          "name": "midterm_evaluations_group_id_fkey",
          "tableFrom": "midterm_evaluations",
          "tableTo": "midterm_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "midterm_evaluations_user_id_fkey": {
          "name": "midterm_evaluations_user_id_fkey",
          "tableFrom": "midterm_evaluations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "midterm_evaluations_evaluator_id_fkey": {
          "name": "midterm_evaluations_evaluator_id_fkey",
          "tableFrom": "midterm_evaluations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "evaluator_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "midterm_evaluations_group_id_user_id_key": {
          "name": "midterm_evaluations_group_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Users can view their own evaluations": {
          "name": "Users can view their own evaluations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        },
        "Admins can view and create evaluations": {
          "name": "Admins can view and create evaluations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n        FROM user_roles\n        WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_group_members": {
      "name": "midterm_group_members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'member'"
        },
        "joined_at": {
          "name": "joined_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "midterm_group_members_group_id_fkey": {
          "name": "midterm_group_members_group_id_fkey",
          "tableFrom": "midterm_group_members",
          "tableTo": "midterm_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "midterm_group_members_user_id_fkey": {
          "name": "midterm_group_members_user_id_fkey",
          "tableFrom": "midterm_group_members",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "midterm_group_members_group_id_user_id_key": {
          "name": "midterm_group_members_group_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Everyone can view group members": {
          "name": "Everyone can view group members",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Users can join groups": {
          "name": "Users can join groups",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = auth.uid())"
        },
        "Users can leave groups": {
          "name": "Users can leave groups",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_groups": {
      "name": "midterm_groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_url": {
          "name": "repository_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_owner": {
          "name": "repository_owner",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_name": {
          "name": "repository_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_sync": {
          "name": "last_sync",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Everyone can view midterm groups": {
          "name": "Everyone can view midterm groups",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Users can create midterm groups": {
          "name": "Users can create midterm groups",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "true"
        },
        "Group members can update their group": {
          "name": "Group members can update their group",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM midterm_group_members \n        WHERE midterm_group_members.group_id = midterm_groups.id \n        AND midterm_group_members.user_id = auth.uid()\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_repository_metrics": {
      "name": "midterm_repository_metrics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "total_commits": {
          "name": "total_commits",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_pull_requests": {
          "name": "total_pull_requests",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_branches": {
          "name": "total_branches",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_issues": {
          "name": "total_issues",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "code_additions": {
          "name": "code_additions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "code_deletions": {
          "name": "code_deletions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "contributors_count": {
          "name": "contributors_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "last_updated": {
          "name": "last_updated",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "detailedMetrics": {
          "name": "detailedMetrics",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "midterm_repository_metrics_group_id_fkey": {
          "name": "midterm_repository_metrics_group_id_fkey",
          "tableFrom": "midterm_repository_metrics",
          "tableTo": "midterm_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "midterm_repository_metrics_group_id_unique": {
          "name": "midterm_repository_metrics_group_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "group_id"
          ]
        }
      },
      "policies": {
        "Everyone can view repository metrics": {
          "name": "Everyone can view repository metrics",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.midterm_tasks": {
      "name": "midterm_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "phase": {
          "name": "phase",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "step": {
          "name": "step",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "task_text": {
          "name": "task_text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_checked": {
          "name": "is_checked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "order_index": {
          "name": "order_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "midterm_tasks_group_id_midterm_groups_id_fk": {
          "name": "midterm_tasks_group_id_midterm_groups_id_fk",
          "tableFrom": "midterm_tasks",
          "tableTo": "midterm_groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assignment_custom_fields": {
      "name": "assignment_custom_fields",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "assignment_id": {
          "name": "assignment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "label": {
          "name": "label",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_required": {
          "name": "is_required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "order": {
          "name": "order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "assignment_custom_fields_assignment_id_assignments_id_fk": {
          "name": "assignment_custom_fields_assignment_id_assignments_id_fk",
          "tableFrom": "assignment_custom_fields",
          "tableTo": "assignments",
          "columnsFrom": [
            "assignment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "assignment_custom_fields_assignment_id_fkey": {
          "name": "assignment_custom_fields_assignment_id_fkey",
          "tableFrom": "assignment_custom_fields",
          "tableTo": "assignments",
          "columnsFrom": [
            "assignment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assignment_submission_custom_values": {
      "name": "assignment_submission_custom_values",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "submission_id": {
          "name": "submission_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "custom_field_id": {
          "name": "custom_field_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "assignment_submission_custom_values_submission_id_assignment_submissions_id_fk": {
          "name": "assignment_submission_custom_values_submission_id_assignment_submissions_id_fk",
          "tableFrom": "assignment_submission_custom_values",
          "tableTo": "assignment_submissions",
          "columnsFrom": [
            "submission_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "assignment_submission_custom_values_custom_field_id_assignment_custom_fields_id_fk": {
          "name": "assignment_submission_custom_values_custom_field_id_assignment_custom_fields_id_fk",
          "tableFrom": "assignment_submission_custom_values",
          "tableTo": "assignment_custom_fields",
          "columnsFrom": [
            "custom_field_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ascv_submission_id_fkey": {
          "name": "ascv_submission_id_fkey",
          "tableFrom": "assignment_submission_custom_values",
          "tableTo": "assignment_submissions",
          "columnsFrom": [
            "submission_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ascv_custom_field_id_fkey": {
          "name": "ascv_custom_field_id_fkey",
          "tableFrom": "assignment_submission_custom_values",
          "tableTo": "assignment_custom_fields",
          "columnsFrom": [
            "custom_field_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "ascv_submission_field_unique": {
          "name": "ascv_submission_field_unique",
          "nullsNotDistinct": false,
          "columns": [
            "submission_id",
            "custom_field_id"
          ]
        }
      },
      "policies": {
        "Users can manage their own custom submission values": {
          "name": "Users can manage their own custom submission values",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM assignment_submissions sub\n  WHERE ((sub.id = submission_id) AND (sub.user_id = auth.uid()))))",
          "withCheck": "(EXISTS ( SELECT 1\n   FROM assignment_submissions sub\n  WHERE ((sub.id = submission_id) AND (sub.user_id = auth.uid()))))"
        },
        "Lecturers and admins can view all custom submission values": {
          "name": "Lecturers and admins can view all custom submission values",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM user_roles\n  WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = ANY (ARRAY['lecturer'::text, 'admin'::text])))))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assignment_submissions": {
      "name": "assignment_submissions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "assignment_id": {
          "name": "assignment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "repository_url": {
          "name": "repository_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "repository_name": {
          "name": "repository_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_at": {
          "name": "submitted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "assignment_submissions_assignment_id_fkey": {
          "name": "assignment_submissions_assignment_id_fkey",
          "tableFrom": "assignment_submissions",
          "tableTo": "assignments",
          "columnsFrom": [
            "assignment_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "assignment_submissions_user_id_fkey": {
          "name": "assignment_submissions_user_id_fkey",
          "tableFrom": "assignment_submissions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "assignment_submissions_user_id_assignment_id_key": {
          "name": "assignment_submissions_user_id_assignment_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "assignment_id"
          ]
        }
      },
      "policies": {
        "Students can submit their own assignments": {
          "name": "Students can submit their own assignments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = auth.uid())"
        },
        "Students can update their own submissions": {
          "name": "Students can update their own submissions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())",
          "withCheck": "(user_id = auth.uid() AND grade IS NULL)"
        },
        "Everyone can view submissions": {
          "name": "Everyone can view submissions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Lecturers and admins can grade submissions": {
          "name": "Lecturers and admins can grade submissions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(\n        EXISTS (\n          SELECT 1 FROM user_roles \n          WHERE user_roles.id = auth.uid() \n          AND user_roles.role IN ('lecturer', 'admin')\n        )\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.assignments": {
      "name": "assignments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "closed": {
          "name": "closed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "assignments_created_by_fkey": {
          "name": "assignments_created_by_fkey",
          "tableFrom": "assignments",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Everyone can view assignments": {
          "name": "Everyone can view assignments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Only lecturers and admins can create assignments": {
          "name": "Only lecturers and admins can create assignments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(\n        EXISTS (\n          SELECT 1 FROM user_roles \n          WHERE user_roles.id = auth.uid() \n          AND user_roles.role IN ('lecturer', 'admin')\n        )\n      )"
        },
        "Only lecturers and admins can update assignments": {
          "name": "Only lecturers and admins can update assignments",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(\n        EXISTS (\n          SELECT 1 FROM user_roles \n          WHERE user_roles.id = auth.uid() \n          AND user_roles.role IN ('lecturer', 'admin')\n        )\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_fkey": {
          "name": "profiles_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Admins can view all profiles": {
          "name": "Admins can view all profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(EXISTS ( SELECT 1\n   FROM user_roles\n  WHERE ((user_roles.id = auth.uid()) AND (user_roles.role = 'admin'::text))))"
        },
        "Users can update their own profile": {
          "name": "Users can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quiz_options": {
      "name": "quiz_options",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "question_id": {
          "name": "question_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_correct": {
          "name": "is_correct",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "order_index": {
          "name": "order_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "quiz_options_question_id_fkey": {
          "name": "quiz_options_question_id_fkey",
          "tableFrom": "quiz_options",
          "tableTo": "quiz_questions",
          "columnsFrom": [
            "question_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Everyone can view quiz options": {
          "name": "Everyone can view quiz options",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Admins can do everything": {
          "name": "Admins can do everything",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quiz_questions": {
      "name": "quiz_questions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "quiz_id": {
          "name": "quiz_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "order_index": {
          "name": "order_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "quiz_questions_quiz_id_fkey": {
          "name": "quiz_questions_quiz_id_fkey",
          "tableFrom": "quiz_questions",
          "tableTo": "quizzes",
          "columnsFrom": [
            "quiz_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Everyone can view quiz questions": {
          "name": "Everyone can view quiz questions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Admins can do everything": {
          "name": "Admins can do everything",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quiz_results": {
      "name": "quiz_results",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "quiz_id": {
          "name": "quiz_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "total_questions": {
          "name": "total_questions",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "answers": {
          "name": "answers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "quiz_results_quiz_id_fkey": {
          "name": "quiz_results_quiz_id_fkey",
          "tableFrom": "quiz_results",
          "tableTo": "quizzes",
          "columnsFrom": [
            "quiz_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "quiz_results_user_id_fkey": {
          "name": "quiz_results_user_id_fkey",
          "tableFrom": "quiz_results",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "quiz_results_quiz_id_user_id_key": {
          "name": "quiz_results_quiz_id_user_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "quiz_id",
            "user_id"
          ]
        }
      },
      "policies": {
        "Users can submit their own results": {
          "name": "Users can submit their own results",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(user_id = auth.uid())"
        },
        "Users can view their own results": {
          "name": "Users can view their own results",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Admins can view all results": {
          "name": "Admins can view all results",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.quizzes": {
      "name": "quizzes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "closed": {
          "name": "closed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "quizzes_created_by_fkey": {
          "name": "quizzes_created_by_fkey",
          "tableFrom": "quizzes",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Everyone can view quizzes": {
          "name": "Everyone can view quizzes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Admins can do everything": {
          "name": "Admins can do everything",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.student_grades": {
      "name": "student_grades",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "quiz_points": {
          "name": "quiz_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_quiz_points": {
          "name": "max_quiz_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "assignment_points": {
          "name": "assignment_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_assignment_points": {
          "name": "max_assignment_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "midterm_points": {
          "name": "midterm_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "extra_points": {
          "name": "extra_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_points": {
          "name": "total_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_possible_points": {
          "name": "max_possible_points",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1000
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "student_grades_user_id_fkey": {
          "name": "student_grades_user_id_fkey",
          "tableFrom": "student_grades",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Students can view their own grades": {
          "name": "Students can view their own grades",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(user_id = auth.uid())"
        },
        "Admins and lecturers can manage grades": {
          "name": "Admins and lecturers can manage grades",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(\n        EXISTS (\n          SELECT 1 FROM user_roles \n          WHERE user_roles.id = auth.uid() \n          AND user_roles.role IN ('lecturer', 'admin')\n        )\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'student'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "timezone('utc'::text, now())"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_roles_id_fkey": {
          "name": "user_roles_id_fkey",
          "tableFrom": "user_roles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "role_check": {
          "name": "role_check",
          "value": "role = ANY (ARRAY['admin'::text, 'lecturer'::text, 'student'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}